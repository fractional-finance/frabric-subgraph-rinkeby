specVersion: 0.0.4

description: Weavr Protocol
repository: https://github.com/fractional-finance/the-frabric-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - name: Frabric
    kind: ethereum/contract
    network: arbitrum-goerli
    source:
      address: '0x70732A738cB59Ffdc5647608DFaAfae35Cae85A1' # SET TO THE ACTUAL DEPLOYMENT ADDRESS
      abi: Frabric
      startBlock: 4407135   # SET TO THE ACTUAL DEPLOYMENT BLOCK
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/frabric.ts
      entities:
        - Frabric
      abis:
        - name: Frabric
          file: ./abis/Frabric.json
        - name: BeaconProxy
          file: ./abis/BeaconProxy.json
        - name: FrabricERC20
          file: ./abis/FrabricERC20.json
      eventHandlers:
        - event: BondRemovalProposal(indexed uint256,indexed address,indexed bool,uint256)
          handler: handleBondRemovalProposal
        - event: KYC(indexed address,indexed address)
          handler: handleKYC
        - event: ParticipantChange(indexed uint8,indexed address)
          handler: handleParticipantChange
        - event: ParticipantProposal(indexed uint256,indexed uint8,indexed address,address)
          handler: handleParticipantProposal
        - event: ParticipantRemovalProposal(indexed uint256,address,uint8)
          handler: handleParticipantRemovalProposal
        - event: Proposal(indexed uint256,indexed uint256,indexed address,bool,bytes32)
          handler: handleProposal
        - event: ProposalStateChange(indexed uint256,indexed uint8)
          handler: handleProposalStateChange
        - event: ThreadProposal(indexed uint256,indexed uint256,indexed address,string,string,bytes32,bytes)
          handler: handleThreadProposal
        - event: ThreadProposalProposal(indexed uint256,indexed address,indexed uint256,bytes32)
          handler: handleThreadProposalProposal
        - event: TokenActionProposal(indexed uint256,indexed address,indexed address,bool,uint256,uint256)
          handler: handleTokenActionProposal
        - event: UpgradeProposal(indexed uint256,indexed address,indexed address,uint256,address,bytes)
          handler: handleUpgradeProposal
        - event: Vote(indexed uint256,indexed uint8,indexed address,uint112)
          handler: handleVote
        - event: Vouch(indexed address,indexed address)
          handler: handleVouch
  # - name: FRBC
  #   kind: ethereum/contract
  #   network: arbitrum-goerli
  #   source:
  #     address: '0x9018f685FdceE5d8A4Db8420C456c7CfBE42352E' # SET TO THE ACTUAL DEPLOYMENT ADDRESS
  #     abi: FrabricERC20
  #     startBlock: 7559741 # SET TO THE ACTUAL DEPLOYMENT BLOCK
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     file: ./src/mappings/frabricERC20.ts
  #     entities:
  #       - FrabricERC20
  #       - FrabricERC20Holder
  #       - FrabricERC20Balance
  #       - FrabricERC20Transfer
  #       - WhitelistRecord
  #       - PricePoint
  #       - Order
  #     abis:
  #       - name: FrabricERC20
  #         file: ./abis/FrabricERC20.json
  #       - name: BeaconProxy
  #         file: ./abis/BeaconProxy.json
  #       - name: Frabric
  #         file: ./abis/Frabric.json
  #     eventHandlers:
  #       - event: Claim(indexed uint256,indexed address,uint112)
  #         handler: handleClaim
  #       - event: DelegateChanged(indexed address,indexed address,indexed address)
  #         handler: handleDelegateChanged
  #       - event: DelegateVotesChanged(indexed address,uint256,uint256)
  #         handler: handleDelegateVotesChanged
  #       - event: Distribution(indexed uint256,indexed address,uint112)
  #         handler: handleDistribution
  #       - event: Freeze(indexed address,uint64)
  #         handler: handleFreeze
  #       - event: GlobalAcceptance()
  #         handler: handleGlobalAcceptance
  #       - event: KYCUpdate(indexed address,indexed bytes32,indexed bytes32,uint256)
  #         handler: handleKYCUpdate
  #       - event: Order(indexed uint8,indexed uint256)
  #         handler: handleOrder
  #       - event: OrderCancellation(indexed address,indexed uint256,uint256)
  #         handler: handleOrderCancellation
  #       - event: OrderCancelling(indexed address,indexed uint256)
  #         handler: handleOrderCancelling
  #       - event: OrderFill(indexed address,indexed uint256,indexed address,uint256)
  #         handler: handleOrderFill
  #       - event: OrderIncrease(indexed address,indexed uint256,uint256)
  #         handler: handleOrderIncrease
  #       - event: Paused(address)
  #         handler: handlePaused
  #       - event: Removal(indexed address,uint256)
  #         handler: handleRemoval
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransfer
  #       - event: Unpaused(address)
  #         handler: handleUnpaused
  #       - event: Whitelisted(indexed address,indexed bool)
  #         handler: handleWhitelisted
  - kind: ethereum/contract
    name: ThreadDeployer
    network: arbitrum-goerli
    source:
      address: '0xb0a230d7A56dec2524e3afAeB0D0cA8e0Bc45924' # SET TO THE ACTUAL DEPLOYMENT ADDRESS
      abi: ThreadDeployer
      startBlock: 4407135 # SET TO THE ACTUAL DEPLOYMENT BLOCK
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/threadDeployer.ts
      entities:
        - Thread
      abis:
        - name: ThreadDeployer
          file: ./abis/ThreadDeployer.json
        - name: Thread
          file: ./abis/Thread.json
        - name: FrabricERC20
          file: ./abis/FrabricERC20.json
      eventHandlers:
        - event: Thread(indexed address,indexed uint8,indexed address,address,bytes32)
          handler: handleThread
        - event: CrowdfundedThread(indexed address,indexed address,indexed address,uint112)
          handler: handleCrowdfundedThread
  - kind: ethereum/contract
    name: Bond
    network: arbitrum-goerli
    source:
      address: '0x4f995659824E51B3461397C922E48ca0C2752007' # SET TO THE ACTUAL DEPLOYMENT ADDRESS
      abi: BondContract
      startBlock: 4407135 # SET TO THE ACTUAL DEPLOYMENT BLOCK
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/bond.ts
      entities:
        - Bond
        - BondHoldings
      abis:
        - name: BondContract
          file: ./abis/BondContract.json
      eventHandlers:
        - event: Bond(address,uint256)
          handler: handleBond
        - event: Claim(indexed uint256,indexed address,uint112)
          handler: handleClaim
        - event: Distribution(indexed uint256,indexed address,uint112)
          handler: handleDistribution
        - event: Slash(address,uint256)
          handler: handleSlash
        - event: Unbond(address,uint256)
          handler: handleUnbond
  # - kind: ethereum/contract
  #   name: Timelock
  #   network: arbitrum-goerli
  #   source:
  #     address: '0x0000000000000000000000000000000000000000' # SET TO THE ACTUAL DEPLOYMENT ADDRESS
  #     abi: Timelock
  #     startBlock: 10616035 # SET TO THE ACTUAL DEPLOYMENT BLOCK
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     file: ./src/mappings/timelock.ts
  #     entities:
  #       - Timelock
  #     abis:
  #       - name: Timelock
  #         file: ./abis/Timelock.json
  #     eventHandlers:
  #       - event: Claim(indexed address,uint256)
  #         handler: handleClaim
  #       - event: Lock(indexed address,indexed uint8)
  #         handler: handleLock
  - kind: ethereum/contract
    name: Auction
    network: arbitrum-goerli
    source:
      address: '0x4e022c910339f320f08817dc0596a92044913C02' # SET TO THE ACTUAL DEPLOYMENT ADDRESS
      abi: Auction
      startBlock: 4407135 # SET TO THE ACTUAL DEPLOYMENT BLOCK
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/auction.ts
      entities:
        - Auction
        - Bid
      abis:
        - name: Auction
          file: ./abis/Auction.json
      eventHandlers:
        - event: AuctionComplete(indexed uint256)
          handler: handleAuctionComplete
        - event: Auctions(indexed uint256,indexed address,indexed address,address,uint256,uint8,uint64,uint32)
          handler: handleAuctions
        - event: Bid(indexed uint256,address,uint256)
          handler: handleBid
templates:
  - name: Crowdfund
    kind: ethereum/contract
    network: arbitrum-goerli
    source:
      abi: Crowdfund
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/crowdfund.ts
      entities:
        - Crowdfund
      abis:
        - name: Crowdfund
          file: ./abis/Crowdfund.json
      eventHandlers:
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
        - event: Claim(indexed uint256,indexed address,uint112)
          handler: handleClaim
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegateChanged
        - event: DelegateVotesChanged(indexed address,uint256,uint256)
          handler: handleDelegateVotesChanged
        - event: Deposit(indexed address,uint112)
          handler: handleDeposit
        - event: Distribution(indexed uint256,indexed address,uint112)
          handler: handleDistribution
        - event: Refund(indexed address,uint112)
          handler: handleRefund
        - event: StateChange(indexed uint8)
          handler: handleStateChange
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Withdraw(indexed address,uint112)
          handler: handleWithdraw
  - name: Thread
    kind: ethereum/contract
    network: arbitrum-goerli
    source:
      abi: Thread
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/thread.ts
      entities:
        - DesriptorChangeProposal
        - FrabricChangeProposal
        - GovernorChangeProposal
        - EcosystemLeaveWithUpgradesProposal
        - DissolutionProposal
        - UpgradeProposal
        - TokenActionProposal
        - ParticipantRemovalProposal
        - Proposal
        - Vote
        - Frabric
      abis:
        - name: Thread
          file: ./abis/Thread.json
        - name: FrabricERC20
          file: ./abis/FrabricERC20.json
        - name: Frabric
          file: ./abis/Frabric.json
      eventHandlers:
        - event: DescriptorChange(indexed bytes32,indexed bytes32)
          handler: handleDescriptorChange
        - event: DescriptorChangeProposal(uint256,indexed bytes32)
          handler: handleDescriptorChangeProposal
        - event: DissolutionProposal(indexed uint256,indexed address,uint256)
          handler: handleDissolutionProposal
        - event: EcosystemLeaveWithUpgradesProposal(indexed uint256,indexed address,indexed address)
          handler: handleEcosystemLeaveWithUpgradesProposal
        - event: FrabricChange(indexed address,indexed address)
          handler: handleFrabricChange
        - event: FrabricChangeProposal(indexed uint256,indexed address,indexed address)
          handler: handleFrabricChangeProposal
        - event: GovernorChange(indexed address,indexed address)
          handler: handleGovernorChange
        - event: GovernorChangeProposal(indexed uint256,indexed address)
          handler: handleGovernorChangeProposal
        - event: ParticipantRemovalProposal(indexed uint256,address,uint8)
          handler: handleParticipantRemovalProposal
        - event: Proposal(indexed uint256,indexed uint256,indexed address,bool,bytes32)
          handler: handleProposal
        - event: ProposalStateChange(indexed uint256,indexed uint8)
          handler: handleProposalStateChange
        - event: TokenActionProposal(indexed uint256,indexed address,indexed address,bool,uint256,uint256)
          handler: handleTokenActionProposal
        - event: UpgradeProposal(indexed uint256,indexed address,indexed address,uint256,address,bytes)
          handler: handleUpgradeProposal
        - event: Vote(indexed uint256,indexed uint8,indexed address,uint112)
          handler: handleVote
  - name: FrabricERC20
    kind: ethereum/contract
    network: arbitrum-goerli
    source:
      abi: FrabricERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/frabricERC20.ts
      entities:
        - FrabricERC20
        - FrabricERC20Holder
        - FrabricERC20Balance
        - FrabricERC20Transfer
        - WhitelistRecord
        - PricePoint
        - Order
      abis:
        - name: FrabricERC20
          file: ./abis/FrabricERC20.json
        - name: Frabric
          file: ./abis/Frabric.json
      eventHandlers:
        - event: Claim(indexed uint256,indexed address,uint112)
          handler: handleClaim
        - event: DelegateChanged(indexed address,indexed address,indexed address)
          handler: handleDelegateChanged
        - event: DelegateVotesChanged(indexed address,uint256,uint256)
          handler: handleDelegateVotesChanged
        - event: Distribution(indexed uint256,indexed address,uint112)
          handler: handleDistribution
        - event: Freeze(indexed address,uint64)
          handler: handleFreeze
        - event: GlobalAcceptance()
          handler: handleGlobalAcceptance
        - event: KYCUpdate(indexed address,indexed bytes32,indexed bytes32,uint256)
          handler: handleKYCUpdate
        - event: Order(indexed uint8,indexed uint256)
          handler: handleOrder
        - event: OrderCancellation(indexed address,indexed uint256,uint256)
          handler: handleOrderCancellation
        - event: OrderCancelling(indexed address,indexed uint256)
          handler: handleOrderCancelling
        - event: OrderFill(indexed address,indexed uint256,indexed address,uint256)
          handler: handleOrderFill
        - event: OrderIncrease(indexed address,indexed uint256,uint256)
          handler: handleOrderIncrease
        - event: Paused(address)
          handler: handlePaused
        - event: Removal(indexed address,uint256)
          handler: handleRemoval
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Unpaused(address)
          handler: handleUnpaused
        - event: Whitelisted(indexed address,indexed bool)
          handler: handleWhitelisted